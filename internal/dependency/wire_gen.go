// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dependency

import (
	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/rizwank123/myResturent/internal/database"
	"github.com/rizwank123/myResturent/internal/http/api"
	"github.com/rizwank123/myResturent/internal/http/controller"
	"github.com/rizwank123/myResturent/internal/pkg/config"
	"github.com/rizwank123/myResturent/internal/pkg/security"
	"github.com/rizwank123/myResturent/internal/repository"
	"github.com/rizwank123/myResturent/internal/service"
)

// Injectors from wire.go:

// NewConfig returns ResturantConfig
func NewConfig(options config.Options) (config.ResturantConfig, error) {
	resturantConfig, err := config.NewResturantConfig(options)
	if err != nil {
		return config.ResturantConfig{}, err
	}
	return resturantConfig, nil
}

// NewDatabase returns a new database connection pool
func NewDatabase(cfg config.ResturantConfig) (*pgxpool.Pool, error) {
	pool := database.NewDB(cfg)
	return pool, nil
}

func NewResturnetApi(cfg config.ResturantConfig, db *pgxpool.Pool) (*api.ResturnetApi, error) {
	menuCardRepository := repository.NewMenuCardRepository(db)
	transactioner := repository.NewTransactioner(db)
	menuCardService := service.NewMenuCardService(menuCardRepository, transactioner)
	meanuCardController := controller.NewMenuCardController(menuCardService)
	resturentRepository := repository.NewResturentRepository(db)
	resturentService := service.NewResturentService(resturentRepository)
	resturentController := controller.NewResturentController(resturentService)
	ratingRepository := repository.NewRatingRepository(db)
	ratingService := service.NewRatingService(ratingRepository)
	ratingController := controller.NewRatingController(ratingService)
	manager := security.NewJWTSecurityManager(cfg)
	userRepository := repository.NewUserRepository(db)
	userService := service.NewUserService(resturentRepository, manager, transactioner, userRepository)
	userController := controller.NewUserController(userService)
	resturnetApi := api.NewResturnetApi(cfg, meanuCardController, resturentController, ratingController, userController)
	return resturnetApi, nil
}
