// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://rizwank123.github.io",
            "email": "rizwank431@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/menu_card": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a menu card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuCard"
                ],
                "summary": "Create a menu card",
                "operationId": "createMenuCard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateMenuCardInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/MenuCard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/menu_card/filter": {
            "post": {
                "description": "Filter menu cards by criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuCard"
                ],
                "summary": "Filter menu cards",
                "operationId": "filterMenuCards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "description": "Filter criteria",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/MenuCard"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/menu_card/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieve a menu card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuCard"
                ],
                "summary": "Retrieve a menu card",
                "operationId": "getMenuCard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/MenuCard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete a menu card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuCard"
                ],
                "summary": "Delete a menu card",
                "operationId": "deleteMenuCard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/MenuCard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update a menu card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MenuCard"
                ],
                "summary": "Update a menu card",
                "operationId": "updateMenuCard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateMenuCardInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/MenuCard"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/rating": {
            "post": {
                "description": "Create a rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Create a rating",
                "operationId": "createRating",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRatingInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rating"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/rating/filter": {
            "post": {
                "description": "Filter ratings by criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Filter ratings",
                "operationId": "filterRatings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "description": "Filter criteria",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Rating"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/rating/{id}": {
            "get": {
                "description": "Find a rating by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Find a rating by id",
                "operationId": "findRatingByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rating"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a rating with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Update a rating",
                "operationId": "updateRating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_rizwank123_myResturent_internal_domain.UpdateRatingInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rating"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a rating by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Delete a rating",
                "operationId": "deleteRating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/resturent": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create a resturent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resturent"
                ],
                "summary": "Create a resturent",
                "operationId": "createResturent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateResturentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Resturent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/resturent/filter": {
            "post": {
                "description": "Filter resturents by criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resturent"
                ],
                "summary": "Filter resturents",
                "operationId": "filterResturents",
                "parameters": [
                    {
                        "description": "Filter criteria",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Resturent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/resturent/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Find a resturent by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resturent"
                ],
                "summary": "Find a resturent by id",
                "operationId": "findResturentById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resturent id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Resturent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update a resturent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resturent"
                ],
                "summary": "Update a resturent",
                "operationId": "updateResturent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resturent id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateResturentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/Resturent"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete a resturent by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resturent"
                ],
                "summary": "Delete a resturent",
                "operationId": "deleteResturent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resturent id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Registers a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Registers a new user",
                "operationId": "registerUser",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/user/filter": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Filter user by criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Filter user",
                "operationId": "filterUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "description": "Filter criteria",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Logs in a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logs in a user",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_rizwank123_myResturent_internal_domain.LoginUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Find user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Find user by id",
                "operationId": "findUserById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Updates a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer ",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload",
                        "name": "in",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenAccessError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/DataNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/SystemError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Mumbai"
                },
                "coordinates": {
                    "$ref": "#/definitions/JSONB"
                },
                "country": {
                    "type": "string",
                    "example": "India"
                },
                "pincode": {
                    "type": "string",
                    "example": "123456"
                },
                "state": {
                    "type": "string",
                    "example": "Maharashtra"
                },
                "street": {
                    "type": "string",
                    "example": "123 Main St"
                }
            }
        },
        "BaseResponse": {
            "type": "object",
            "properties": {
                "data": {}
            }
        },
        "CreateMenuCardInput": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "veg"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "food_type": {
                    "type": "string",
                    "example": "Main Course"
                },
                "image": {
                    "type": "string",
                    "example": "image"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "meal_type": {
                    "type": "string",
                    "example": "DiNNER"
                },
                "name": {
                    "type": "string",
                    "example": "Butter Chicken"
                },
                "price": {
                    "type": "number",
                    "example": 300
                },
                "resturent_id": {
                    "type": "string",
                    "example": "c816d9e0-63e5-11ec-90d6-0242ac120003"
                },
                "size": {
                    "type": "string",
                    "example": "half plate"
                }
            }
        },
        "CreateRatingInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Alex t"
                },
                "rating": {
                    "type": "number",
                    "example": 5
                },
                "resturent_id": {
                    "type": "string",
                    "example": "c816d9e0-63e5-11ec-90d6-0242ac120003"
                },
                "review": {
                    "type": "string",
                    "example": "review"
                },
                "suggestion": {
                    "type": "string",
                    "example": "Make sure reduce serving time"
                }
            }
        },
        "CreateResturentInput": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "license": {
                    "type": "string",
                    "example": "license"
                },
                "name": {
                    "type": "string",
                    "example": "Alamgiri Resturent"
                }
            }
        },
        "CreateUserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email"
                },
                "mobile": {
                    "type": "string",
                    "example": "mobile"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "resturentID": {
                    "type": "string"
                },
                "resturent_name": {
                    "type": "string",
                    "example": "resturent_name"
                },
                "role": {
                    "type": "string",
                    "example": "role"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "DataNotFoundError": {
            "type": "object"
        },
        "FilterFieldPredicate": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "Field represents a column for the entity you are filtering",
                    "type": "string",
                    "example": "name"
                },
                "operator": {
                    "description": "Operator represents the filter operation you'd like to perform on the field",
                    "enum": [
                        "eq",
                        "neq",
                        "gt",
                        "gte",
                        "lt",
                        "lte",
                        "in",
                        "nin",
                        "like",
                        "nlike",
                        "ilike",
                        "nilike",
                        "isnull",
                        "notnull",
                        "between"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/FilterOp"
                        }
                    ],
                    "example": "eq"
                },
                "value": {
                    "description": "Value represents the value you'd like to filter by"
                }
            }
        },
        "FilterInput": {
            "type": "object",
            "properties": {
                "fields": {
                    "description": "Fields represents the fields you want to filter",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterFieldPredicate"
                    }
                },
                "sort_keys": {
                    "description": "SortKeys represents the sort keys you want to sort by",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortKey"
                    }
                }
            }
        },
        "FilterOp": {
            "type": "string",
            "enum": [
                "eq",
                "neq",
                "gt",
                "gte",
                "lt",
                "lte",
                "in",
                "nin",
                "like",
                "nlike",
                "ilike",
                "nilike",
                "isnull",
                "notnull",
                "between"
            ],
            "x-enum-varnames": [
                "FilterOpEq",
                "FilterOpNeq",
                "FilterOpGt",
                "FilterOpGte",
                "FilterOpLt",
                "FilterOpLte",
                "FilterOpIn",
                "FilterOpNin",
                "FilterOpLike",
                "FilterOpNlike",
                "FilterOpIlike",
                "FilterOpNilike",
                "FilterOpIsnull",
                "FilterOpNotnull",
                "FilterOpBetween"
            ]
        },
        "ForbiddenAccessError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "FORBIDDEN_ACCESS"
                },
                "message": {
                    "type": "string",
                    "example": "You are forbidden from accessing this resource"
                }
            }
        },
        "InvalidRequestError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "invalid request"
                }
            }
        },
        "JSONB": {
            "type": "object",
            "additionalProperties": true
        },
        "LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "token"
                }
            }
        },
        "MenuCard": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "Veg"
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "food_type": {
                    "type": "string",
                    "example": "Starter"
                },
                "id": {
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "image": {
                    "type": "string",
                    "example": "image"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "meal_type": {
                    "type": "string",
                    "example": "Dinner"
                },
                "name": {
                    "type": "string",
                    "example": "Alex t"
                },
                "price": {
                    "type": "number",
                    "example": 5
                },
                "resturent_id": {
                    "type": "string",
                    "example": "c816d9e0-63e5-11ec-90d6-0242ac120003"
                },
                "size": {
                    "type": "string",
                    "example": "half plate"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                }
            }
        },
        "NotFoundError": {
            "type": "object"
        },
        "PaginationResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "size": {
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "Rating": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                },
                "id": {
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "name": {
                    "type": "string",
                    "example": "Alex t"
                },
                "rating": {
                    "type": "number",
                    "example": 5
                },
                "resturent_id": {
                    "type": "string",
                    "example": "c816d9e0-63e5-11ec-90d6-0242ac120003"
                },
                "review": {
                    "type": "string",
                    "example": "review"
                },
                "suggestion": {
                    "type": "string",
                    "example": "suggestion"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                }
            }
        },
        "Resturent": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                },
                "id": {
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "license": {
                    "type": "string",
                    "example": "license"
                },
                "name": {
                    "type": "string",
                    "example": "Alamgiri Resturent"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                }
            }
        },
        "SortKey": {
            "type": "object",
            "properties": {
                "direction": {
                    "description": "Direction represents the direction of the sort",
                    "type": "string",
                    "example": "asc"
                },
                "field": {
                    "description": "Field represents a column for the entity you are sorting",
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "SystemError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "INTERNAL_SERVER_ERROR"
                },
                "message": {
                    "type": "string",
                    "example": "Oops! Something went wrong. Please try again later"
                }
            }
        },
        "UnauthorizedError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "UNAUTHORIZED"
                },
                "message": {
                    "type": "string",
                    "example": "You are not authorized to access this resource"
                }
            }
        },
        "UpdateMenuCardInput": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "veg"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "food_type": {
                    "type": "string",
                    "example": "Main Course"
                },
                "image": {
                    "type": "string",
                    "example": "image"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "meal_type": {
                    "type": "string",
                    "example": "BREAKFAST"
                },
                "name": {
                    "type": "string",
                    "example": "Butter Chicken"
                },
                "price": {
                    "type": "number",
                    "example": 300
                },
                "resturent_id": {
                    "type": "string",
                    "example": "c816d9e0-63e5-11ec-90d6-0242ac120003"
                },
                "size": {
                    "type": "string",
                    "example": "half plate"
                }
            }
        },
        "UpdateResturentInput": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "license": {
                    "type": "string",
                    "example": "license"
                },
                "name": {
                    "type": "string",
                    "example": "Alamgiri Resturent"
                }
            }
        },
        "UpdateUserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email"
                },
                "mobile": {
                    "type": "string",
                    "example": "mobile"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "resturentID": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "example": "role"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                },
                "email": {
                    "type": "string",
                    "example": "email"
                },
                "id": {
                    "type": "string",
                    "example": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11"
                },
                "mobile": {
                    "type": "string",
                    "example": "mobile"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "resturent_id": {
                    "type": "string",
                    "example": "c816d9e0-63e5-11ec-90d6-0242ac120003"
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_rizwank123_myResturent_internal_domain.UserRole"
                        }
                    ],
                    "example": "role"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-02-16 15:35:10.535606+05:30"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "github_com_rizwank123_myResturent_internal_domain.LoginUserInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "github_com_rizwank123_myResturent_internal_domain.UpdateRatingInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Alex t"
                },
                "rating": {
                    "type": "number",
                    "example": 5
                },
                "review": {
                    "type": "string",
                    "example": "Food was delicious"
                },
                "suggestion": {
                    "type": "string",
                    "example": "Make sure reduce serving time"
                }
            }
        },
        "github_com_rizwank123_myResturent_internal_domain.UserRole": {
            "type": "string",
            "enum": [
                "OWNER",
                "ADMIN",
                "SUPERVISOR"
            ],
            "x-enum-varnames": [
                "UserRoleOwner",
                "UserRoleAdmin",
                "UserRoleSupervisor"
            ]
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7700",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Resturnet API",
	Description:      "Resturnet's set of APIs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
